{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tahir\\\\Desktop\\\\React\\\\todo\\\\todo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { nanoid } from \"nanoid\";\nimport Form from \"./components/Form\";\nimport Todo from \"./components/Todo\";\nimport FilterButton from \"./components/FilterButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  //Todoları tutmak ve değiştirmek için -> useState\n  const [todo, setTodo] = useState(props.todos); //Todo Eklemek için addTodo ->\n\n  const addTodo = name => {\n    const newTodo = {\n      id: \"todo-\" + nanoid(),\n      name: name,\n      completed: false\n    };\n    setTodo([...todo, newTodo]);\n  }; //Todo Silmek için deleteTodo ->\n\n\n  const deleteTodo = id => {\n    const remainingTodos = todo.filter(todo => id !== todo.id);\n    setTodo(remainingTodos);\n  }; //Sadece tamamlanmış Todo'ların hepsini silmek için ->\n\n\n  const deleteAllTodo = id => {\n    const clearCompleted = todo.filter(todo => id !== todo.id && !todo.completed);\n    setTodo(clearCompleted);\n  }; // Todo tamamlandı mı tamamlanmadı mı? ->\n\n\n  const toggleTodoCompleted = id => {\n    const updatedTodo = todo.map(todo => {\n      if (id === todo.id) {\n        return { ...todo,\n          completed: !todo.completed\n        };\n      }\n\n      return todo;\n    });\n    setTodo(updatedTodo);\n  }; //Girilmiş todo içeriğini değiştirme ->\n\n\n  const editTodo = (id, newName) => {\n    const editedTodoList = todo.map(todo => {\n      if (id === todo.id) {\n        return { ...todo,\n          name: newName\n        };\n      }\n\n      return todo;\n    });\n    setTodo(editedTodoList);\n  }; //Filtreleme ->\n\n\n  const [filter, setFilter] = useState(\"All\");\n  const FILTER_MAP = {\n    All: () => true,\n    Active: todo => !todo.completed,\n    Completed: todo => todo.completed\n  };\n  const FILTER_NAMES = Object.keys(FILTER_MAP);\n  const filterList = FILTER_NAMES.map(name => /*#__PURE__*/_jsxDEV(FilterButton, {\n    name: name,\n    isPressed: name === filter,\n    setFilter: setFilter\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this)); //Todoların geldiği yer ->\n\n  const todoList = todo.filter(FILTER_MAP[filter]).map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n    id: todo.id,\n    name: todo.name,\n    completed: todo.completed,\n    toggleTodoCompleted: toggleTodoCompleted,\n    deleteTodo: deleteTodo,\n    editTodo: editTodo\n  }, todo.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this)); // Todo sayısı 1'e eşit değilse \"tasks\" eşitse \"task\" yazdırma ->\n\n  const todoNoun = todoList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${todoList.length} ${todoNoun} left`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), todoList, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"items-left\",\n        children: headingText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"footer-button\",\n        children: filterList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteAllTodo(todo.id),\n        children: \"Clear Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"sh/XONVKbrQcjqgAo6xOvnVV4f4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","nanoid","Form","Todo","FilterButton","App","props","todo","setTodo","todos","addTodo","name","newTodo","id","completed","deleteTodo","remainingTodos","filter","deleteAllTodo","clearCompleted","toggleTodoCompleted","updatedTodo","map","editTodo","newName","editedTodoList","setFilter","FILTER_MAP","All","Active","Completed","FILTER_NAMES","Object","keys","filterList","todoList","todoNoun","length","headingText"],"sources":["C:/Users/tahir/Desktop/React/todo/todo/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { nanoid } from \"nanoid\";\nimport Form from \"./components/Form\";\nimport Todo from \"./components/Todo\";\nimport FilterButton from \"./components/FilterButton\";\n\nconst App = (props) => {\n  //Todoları tutmak ve değiştirmek için -> useState\n  const [todo, setTodo] = useState(props.todos);\n\n  //Todo Eklemek için addTodo ->\n  const addTodo = (name) => {\n    const newTodo = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTodo([...todo, newTodo]);\n  };\n\n  //Todo Silmek için deleteTodo ->\n  const deleteTodo = (id) => {\n    const remainingTodos = todo.filter((todo) => id !== todo.id);\n    setTodo(remainingTodos);\n  };\n\n  //Sadece tamamlanmış Todo'ların hepsini silmek için ->\n  const deleteAllTodo = (id) => {\n    const clearCompleted = todo.filter(\n      (todo) => id !== todo.id && !todo.completed\n    );\n    setTodo(clearCompleted);\n  };\n  // Todo tamamlandı mı tamamlanmadı mı? ->\n  const toggleTodoCompleted = (id) => {\n    const updatedTodo = todo.map((todo) => {\n      if (id === todo.id) {\n        return { ...todo, completed: !todo.completed };\n      }\n      return todo;\n    });\n    setTodo(updatedTodo);\n  };\n\n  //Girilmiş todo içeriğini değiştirme ->\n  const editTodo = (id, newName) => {\n    const editedTodoList = todo.map((todo) => {\n      if (id === todo.id) {\n        return { ...todo, name: newName };\n      }\n      return todo;\n    });\n    setTodo(editedTodoList);\n  };\n\n  //Filtreleme ->\n  const [filter, setFilter] = useState(\"All\");\n\n  const FILTER_MAP = {\n    All: () => true,\n    Active: (todo) => !todo.completed,\n    Completed: (todo) => todo.completed,\n  };\n  const FILTER_NAMES = Object.keys(FILTER_MAP);\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n  //Todoların geldiği yer ->\n  const todoList = todo\n    .filter(FILTER_MAP[filter])\n    .map((todo) => (\n      <Todo\n        id={todo.id}\n        name={todo.name}\n        completed={todo.completed}\n        key={todo.id}\n        toggleTodoCompleted={toggleTodoCompleted}\n        deleteTodo={deleteTodo}\n        editTodo={editTodo}\n      />\n    ));\n  // Todo sayısı 1'e eşit değilse \"tasks\" eşitse \"task\" yazdırma ->\n  const todoNoun = todoList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${todoList.length} ${todoNoun} left`;\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1>todos</h1>\n      </div>\n      <Form addTodo={addTodo} />\n      {todoList}\n\n      <div className=\"footer\">\n        <section className=\"items-left\">{headingText}</section>\n        <section className=\"footer-button\">{filterList}</section>\n        <button onClick={() => deleteAllTodo(todo.id)}>Clear Completed</button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}